;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void init_int1(void){
; 0000 0015 void init_int1(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016 TCCR1A = (1 << WGM12) | (1 << CS12) | (1 << CS10);  //1024 --> cs12 cs10
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0017 OCR1AH = 0x3D;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0018 OCR1AL = 0x09;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0019 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;void init_int2(void){
; 0000 001B void init_int2(void){
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001C TCCR1B = (1 << WGM22) | (1 << CS21) ; //prescaler 8
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001D OCR1BH = 0x7;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 001E OCR1BL = 0xD0;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001F TIMSK1 = 0b00000110;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0020 }
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;void SevenSegment(int num) {
; 0000 0023 void SevenSegment(int num) {
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0024 // Elif for number modifier Seven Segments
; 0000 0025 if (num == 0) {
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;	num -> R16,R17
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0026 SEG_A = 0;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0027 SEG_B = 0;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0028 SEG_C = 0;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0029 SEG_D = 0;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002A SEG_E = 0;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002B SEG_F = 0;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 002C SEG_G = 1;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 002D } else if (num == 1) {
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002E SEG_A = 1;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 002F SEG_B = 0;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0030 SEG_C = 0;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0031 SEG_D = 1;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0032 SEG_E = 1;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0033 SEG_F = 1;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0034 SEG_G = 1;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0035 } else if (num == 2) {
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0036 SEG_A = 0;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0037 SEG_B = 0;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0038 SEG_C = 1;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0039 SEG_D = 0;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 003A SEG_E = 0;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003B SEG_F = 1;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 003C SEG_G = 0;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 003D } else if (num == 3) {
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 003E SEG_A = 0;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 003F SEG_B = 0;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0040 SEG_C = 0;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0041 SEG_D = 0;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0042 SEG_E = 1;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0043 SEG_F = 1;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0044 SEG_G = 0;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0045 } else if (num == 4) {
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0046 SEG_A = 1;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0047 SEG_B = 0;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0048 SEG_C = 0;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0049 SEG_D = 1;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 004A SEG_E = 1;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 004B SEG_F = 0;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 004C SEG_G = 0;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 004D } else if (num == 5) {
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 004E SEG_A = 0;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 004F SEG_B = 1;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0050 SEG_C = 0;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0051 SEG_D = 0;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0052 SEG_E = 1;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0053 SEG_F = 0;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0054 SEG_G = 0;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0055 } else if (num == 6) {
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0056 SEG_A = 0;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0057 SEG_B = 1;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0058 SEG_C = 0;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0059 SEG_D = 0;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 005A SEG_E = 0;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 005B SEG_F = 0;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 005C SEG_G = 0;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 005D } else if (num == 7) {
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 005E SEG_A = 0;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 005F SEG_B = 0;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0060 SEG_C = 0;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0061 SEG_D = 1;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0062 SEG_E = 1;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0063 SEG_F = 1;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0064 SEG_G = 1;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0065 } else if (num == 8) {
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0066 SEG_A = 0;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0067 SEG_B = 0;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0068 SEG_C = 0;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0069 SEG_D = 0;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 006A SEG_E = 0;
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 006B SEG_F = 0;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 006C SEG_G = 0;
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 006D } else if (num == 9) {
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 006E SEG_A = 0;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 006F SEG_B = 0;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0070 SEG_C = 0;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0071 SEG_D = 0;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0072 SEG_E = 1;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0073 SEG_F = 0;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0074 SEG_G = 0;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0075 }
; 0000 0076 }
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;interrupt [12] void timera_compa_isr(void) {
; 0000 0082 interrupt [12] void timera_compa_isr(void) {
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0083 // Check if 1 Second has Passed
; 0000 0084 seconds_60++;
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0085 
; 0000 0086 // Check if 1 Minute has Passed
; 0000 0087 if (seconds_60 >= 60) {
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0088 seconds_60 = 0;
;PCODE: $000000F8 VOL: 0
; 0000 0089 seconds++;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 008A }
; 0000 008B if (seconds >= 60) {
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 008C seconds = 0;
;PCODE: $00000100 VOL: 0
; 0000 008D minutes++;
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 008E }
; 0000 008F if (minutes >= 60){
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 0090 minutes = 0;
;PCODE: $00000108 VOL: 0
; 0000 0091 }
; 0000 0092 
; 0000 0093 // Update Digit Values
; 0000 0094 digits[0] = minutes / 10;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0095 digits[1] = minutes % 10;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0096 digits[2] = seconds / 10;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 0097 digits[3] = seconds % 10;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0098 }
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;interrupt [13] void timerb_compb_isr(void) {
; 0000 009B interrupt [13] void timerb_compb_isr(void) {
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 009C 
; 0000 009D // Update Segment Values for Current Digit
; 0000 009E SevenSegment(digits[digit_index]);
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 009F 
; 0000 00A0 // Enable Multiplexing for Current Digit
; 0000 00A1 // Elif for choose seven SevenSegmen
; 0000 00A2 if (digit_index == 0) {
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00A3 DIGIT_1 = 1;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00A4 DIGIT_2 = 0;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00A5 DIGIT_3 = 0;
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00A6 DIGIT_4 = 0;
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00A7 } else if (digit_index == 1) {
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00A8 DIGIT_1 = 0;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00A9 DIGIT_2 = 1;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00AA DIGIT_3 = 0;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00AB DIGIT_4 = 0;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00AC } else if (digit_index == 2) {
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00AD DIGIT_1 = 0;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00AE DIGIT_2 = 0;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00AF DIGIT_3 = 1;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00B0 DIGIT_4 = 0;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 00B1 } else if (digit_index == 3) {
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 00B2 DIGIT_1 = 0;
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00B3 DIGIT_2 = 0;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00B4 DIGIT_3 = 0;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00B5 DIGIT_4 = 1;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00B6 }
; 0000 00B7 
; 0000 00B8 // Increment Digit Index
; 0000 00B9 digit_index++;
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00BA 
; 0000 00BB // Wrap Around Digit Index
; 0000 00BC if (digit_index >= 4) {
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00BD digit_index = 0;
;PCODE: $00000164 VOL: 0
; 0000 00BE }
; 0000 00BF }
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;void main(void) {
; 0000 00C1 void main(void) {
;PCODE: $00000169 VOL: 0
; 0000 00C2 // Initialize Timer1
; 0000 00C3 //set prescaler 1024
; 0000 00C4 init_int1();
;PCODE: $0000016A VOL: 0
; 0000 00C5 init_int2();
;PCODE: $0000016B VOL: 0
; 0000 00C6 
; 0000 00C7 // Enable Interrupts
; 0000 00C8 #asm("sei")
;PCODE: $0000016C VOL: 0
; 0000 00C9 
; 0000 00CA // Set Seven Segment Pins as Output
; 0000 00CB DDRB = 0b111111;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00CC DDRD = 0b11111111;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00CD 
; 0000 00CE while (1) {
;PCODE: $00000171 VOL: 0
; 0000 00CF 
; 0000 00D0 }
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00D1 }
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
